"use strict";var appModule=angular.module("smModule",["ngRoute","ngCookies","ngResource","ui.bootstrap","ui.router","toastr","ngAnimate"]);appModule.run(["$rootScope","$timeout","$location","icdb","$http","alertService",function($rootScope,$timeout,$location,icdb,$http,alertService){$rootScope.g={},$rootScope.$on("$stateChangeSuccess",function(event,next,current){$("html, body").animate({scrollTop:0},"slow"),$rootScope.g.location=$location.path()}),$rootScope.g.getActiveClass=function(key){return $location.path()==key?"active":""},$rootScope.g.logout=function(key){$http.post("api/user/logout").success(function(){$location.path("login")})},$rootScope.g.dtpObj={},$rootScope.g.dtpObj.opened=!1,$rootScope.g.dtpObj.format="dd-MM-yyyy",$rootScope.g.dtpObj.dateOptions={formatYear:"yy",startingDay:1},$rootScope.g.dtpObj.calObj={},$rootScope.g.dtpObj.openDp=function(key){$rootScope.g.dtpObj.calObj={},$rootScope.g.dtpObj.calObj[key]=!0}}]);var checkLogIn=function($q,$timeout,$http,$location,$rootScope,status){var deferred=$q.defer();return $http.get("/api/user/me").success(function(userResponse){if(!userResponse||!userResponse._id)return $location.path("/login"),void $timeout(deferred.reject);$rootScope.g.loggedUser=userResponse,$timeout(deferred.reject)}).error(function(){$timeout(deferred.reject)}),$timeout(deferred.reject),deferred.promise},checkLogout=function($q,$timeout,$http,$location,$rootScope,status){var deferred=$q.defer();return $http.get("/api/user/me").success(function(userResponse){userResponse&&userResponse._id&&($rootScope.g.loggedUser=userResponse),$timeout(deferred.reject)}).error(function(){$timeout(deferred.reject)}),$timeout(deferred.reject),deferred.promise},checkLoggedIn=function($q,$timeout,$http,$location,$rootScope){checkLogIn($q,$timeout,$http,$location,$rootScope,!0)};checkLoggedIn.$inject=["$q","$timeout","$http","$location","$rootScope"];var checkLogoutt=function($q,$timeout,$http,$location,$rootScope){checkLogout($q,$timeout,$http,$location,$rootScope,!0)};checkLogoutt.$inject=["$q","$timeout","$http","$location","$rootScope"],appModule.config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$locationProvider.html5Mode({enabled:!1,requireBase:!0}).hashPrefix("!"),$stateProvider.state("login",{url:"/login",templateUrl:"/angular/views/login.html",resolve:{loggedin:checkLogoutt}}),$stateProvider.state("register",{url:"/register",templateUrl:"/angular/views/register.html",resolve:{loggedin:checkLogoutt}}),$stateProvider.state("index",{url:"/index",templateUrl:"/angular/views/index.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("category",{url:"/category",templateUrl:"/angular/views/category.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("subcategory",{url:"/subcategory",templateUrl:"/angular/views/subcategory.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("storedetail",{url:"/storedetail",templateUrl:"/angular/views/storedetail.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("company",{url:"/company",templateUrl:"/angular/views/company.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("texdetail",{url:"/texdetail",templateUrl:"/angular/views/texdetail.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("discount",{url:"/discount",templateUrl:"/angular/views/discount.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("contact",{url:"/contact",templateUrl:"/angular/views/contact.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("product",{url:"/product",templateUrl:"/angular/views/product.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("barcode",{url:"/barcode",templateUrl:"/angular/views/barcode.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("brand",{url:"/brand",templateUrl:"/angular/views/brand.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("currencies",{url:"/currencies",templateUrl:"/angular/views/currencies.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("customergroup",{url:"/customergroup",templateUrl:"/angular/views/customergroup.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("expcategory",{url:"/expcategory",templateUrl:"/angular/views/expcategory.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("business",{url:"/business",templateUrl:"/angular/views/business.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("unit",{url:"/unit",templateUrl:"/angular/views/unit.html",resolve:{loggedin:checkLoggedIn}}),$urlRouterProvider.otherwise("/login")}]),appModule.directive("numbersOnly",function(){return{require:"ngModel",link:function(scope,element,attr,ngModelCtrl){ngModelCtrl.$parsers.push(function(text){if(text){var transformedInput=text.replace(/[^0-9]/g,"");return transformedInput!==text&&(ngModelCtrl.$setViewValue(transformedInput),ngModelCtrl.$render()),transformedInput}})}}}),angular.module("smModule").config(["toastrConfig",function(toastrConfig){angular.extend(toastrConfig,{autoDismiss:!1,containerId:"toast-container",maxOpened:0,newestOnTop:!0,preventDuplicates:!1,preventOpenDuplicates:!1,target:"body"})}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,["smModule"]),setTimeout(function(){$("#front-spinner-bx").hide(),$(".body-main-cn").show()},500)}),appModule.controller("CommonController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.comnObj1={},$scope.comnObj1.getSection=function(sectionId){$("html, body").animate({scrollTop:$("#"+sectionId).offset().top},2e3)},$rootScope.g.togleSidebar=function(){$(".sidebar").toggleClass("shrink show")}}]),appModule.controller("UserController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","alertService","$timeout","$state",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,alertService,$timeout,$state){$scope.uObj={},$scope.uObj.register={},$scope.uObj.register.model={},$scope.uObj.register.isSubmited=!1,$scope.uObj.register.isReqSent=!1,$scope.uObj.register.submit=function(form){console.log($scope.uObj.register.model),form.$valid?($scope.uObj.register.isSubmited=!1,$scope.uObj.register.isReqSent=!0,$http.post("api/user/register",$scope.uObj.register.model).success(function(response){$scope.uObj.register.isReqSent=!1,1!=response.status?2!=response.status?$location.path("login"):alertService.flash("error",response.errors[0].msg):alertService.flash("error","User already register")})):$scope.uObj.register.isSubmited=!0},$scope.uObj.login={},$scope.uObj.login.isSubmited=!1,$scope.uObj.login.isReqSent=!1,$scope.uObj.login.submit=function(form){form.$valid?($scope.uObj.login.isSubmited=!1,$scope.uObj.login.isReqSent=!0,$http.post("api/user/login",$scope.uObj.login.model).success(function(response){$scope.uObj.login.isReqSent=!1,response.status?$location.path("index"):alertService.flash("error",response.msg)})):$scope.uObj.login.isSubmited=!0}}]),appModule.controller("DashboardController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){}]),appModule.factory("IcMean",[function(){return{name:"ic-mean"}}]),appModule.factory("icdb",["$http",function($http){var dataFactory={insert:function(model,data,callback){data.model=model,$http.post("/api/common/add-data",data).success(function(result){callback(result)})},update:function(model,_id,data,callback){data.model=model,data._id=_id,$http.post("/api/common/edit-data",data).success(function(result){callback(result)})},updateAddChild:function(model,entityId,entityKey,data,callback){data.model=model,data.entityId=entityId,data.entityKey=entityKey,$http.post("/api/common/update-data",data).success(function(result){callback(result)})},updateChild:function(model,entityId,entityKey,childEntityId,data,callback){data.model=model,data.entityId=entityId,data.childEntityId=childEntityId,data.entityKey=entityKey,$http.post("/api/common/update-child-data",data).success(function(result){callback(result)})},removeChilds:function(model,entityId,entityKey,data,callback){data.model=model,data._id=entityId,data.entityKey=entityKey,$http.post("/api/common/delete",data).success(function(result){callback(result)})},insertChild:function(model,entityId,entityKey,data,callback){data.model=model,data.entityId=entityId,data.entityKey=entityKey,data.isChildInsert=!0,$http.post("/api/common/add-data",data).success(function(result){callback(result)})},remove:function(model,_id,callback){$http.post("/api/common/delete",{model:model,_id:_id}).success(function(result){callback(result)})},get:function(model,callback){$http.post("/api/common/get-data",{model:model}).success(function(result){callback(result)})},getCondition:function(model,condition,callback){$http.post("/api/common/get-condition",{model:model,condition:condition}).success(function(result){callback(result)})},getSingle:function(model,_id,callback){$http.post("/api/common/single-data",{model:model,_id:_id}).success(function(result){callback(result)})}};return dataFactory.removeChilds=function(model,entityId,entityKey,data,callback){data.model=model,data._id=entityId,data.entityKey=entityKey,$http.post("/api/common/delete",data).success(function(result){callback(result)})},dataFactory}]),appModule.factory("alertService",["toastr",function(toastr){var alertService={};return alertService.flash=function(type,msg,isRedirect){"success"!=type&&"error"!=type||function(msgType,msg){"success"==msgType?toastr.success(msgType,msg):toastr.error(msgType,msg)}(type,msg)},alertService}]);